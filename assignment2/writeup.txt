Web service works -- API returns query suggestions in JSON (fast!)
	To implement this I first processed the wikipedia titles file. I removed all lines that contained special characters and kept lines that contained only letters or an underscore. I replaced each underscore with a space and saved the file. After processing the file I uploaded it to my Azure Blob storage. I then created a TrieNode Class, Trie Class, and WebService. The Webservice contains three WebMethods to download the wiki file from the blob storage, build the trie, and search the trie with a given prefix. I implemented the TrieNode to have three properties to store its character, children, and whether it was the end of a word. The TrieNode has functions that allow it to add a child and get the words stemming from it. The Trie Class contains the root node and a maximum results to be displayed to the user. Its functions allow for new words to be added to the trie and retrieve a list of words with a given prefix. The DownloadWiki function in the WebService downloads the wiki file from the azure blob and saves it as a local file. The build trie reads lines from the file and adds it to the trie. To prevent OutOfMemory exceptions and memory problems I implemented it so that the quickly builds itself until the system is using 750mbs of processing memory then slows down to ensure that 50mbs are available for later usage (searching the trie, etc). Once it reaches this point, it breaks out from adding new words to the trie. The searchtrie method has two features. First, it is used to initialize the webpage/service by checking if the local wiki file exists and if the trie has been built. Second, as a user types AJAX requests are called to the webservice, specifically the searchtrie method. It returns a list of 10 results that match the provide prefix in JSON format by utilizing JSON response formatting.

Client-side AJAX & modify DOM to show retrieved query suggestions
	To implement this I attached an event handler to the text input form. After each keyup event an AJAX request is called to the WebService's SearchTrie method. It provides the prefix parameter with the value of the input field. The success callback function creates HTML to display the results in a div on the page. For each callback function the results div is empty to make room for new results.

Web service written in C# -- C# best practices!
	To implement this I used C# and created my classes in different .cs files. I also used appropriate casing for methods and properties. For each property I carefully implemented whether it should have a get or set and whether they should be public or private. I also commented my code using '///' and filled out the template.

Query suggestion web service runs on Azure
	To implement this I published my webservice onto my Azure instance through Visual Studio's easy to use interface. For set up I downloaded the wikifile and built the trie. Then, I set up a pinging service to send a request every 10 minutes to ensure that my trie would not be garabage collected after 20 minutes of inactivity.
 